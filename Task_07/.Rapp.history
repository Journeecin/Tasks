if(locus==1&&n==1){
outPhy<-read.tree(text=stats$trees[[locus]][n])
}
else{
outPhy<-ape:::c.phylo(outPhy,read.tree(text=stats$trees[[locus]][n]))
}
par(mfrow=c(1,1))
densityTree(outPhy)
model3<-coal_model(10,50)+
feat_mutation(par_prior("theta",sample.int(100,1)))+
sumstat_nucleotide_div()
stats<-simulate(model3,nsim=40)
mean_pi<-sapply(stats,function(x)mean(x$pi))
theta<-sapply(stats,function(x)x$pars[["theta"]])
plot(t1)
axisPhylo()
Agel<-max(nodeHeights(t1))
t2<-read.tree(text=stats$trees[[2]][1])
install.packages("learnPopGen")
library(learnPopGen)
install.packages("coala")
library(coala)
install.packages("phytools")
library(phytools)
model<-coal_model(sample_size=5,loci_number=10,loci_length=500,ploidy=2)+
feat_mutation(10)+
feat_recombination(10)+
sumstat_trees()+
sumstat_nucleotide_div()
stats<-simulate(model,nsim=1)
Diversity<-stats$pi
Nloci<-length(stats$trees)
t1<-read.tree(text=stats$trees[[1]][1])
plot(t1)
axisPhylo()
Agel<-max(nodeHeights(t1))
t2<-read.tree(text=stats$trees[[2]][1])
plot(t2)
par(mfrow=c(1,2))
plot(t1)
axisPhylo()
plot(t2)
axisPhylo()
compare.chronograms(t1,t2)
t1_1<-read.tree(text=stats$trees[[1]][1])
t1_2<-read.tree(text=stats$trees[[1]][2])
compare.chronograms(t1_1,t1_2)
~/Desktop/Evolution/Evolution/Tasks/Project/BRAINSZE to IQ.xlsx
source("http://jonsmitchell.com/code/reformatData07.R")
souce("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/simFxn.R")
plot(1,1,type="n",xlim=c(1998,2013),ylim=c(0,1))
s<-apply(overallFreq,2,function(x)lines(overallFreq[,1],x,col=rgb(0,0,0,0.01)))
source("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/simFxn.R")
source("/Users/journeewheeler/Desktop/Evolution/Evolution/Tasks/Task_07/Untitled.R")
source("http://jonsmitchell.com/code/simFxn.R")
source("http://jonsmitchell.com/code/reformatData07.R")
Source("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/simFxn.R")
plot(1,1,type="n",xlim=c(1998,2013),ylim=c(0,1))
s<-apply(overallFreq,2,function(x)lines(overallFreq[,1],x,col=rgb(0,0,0,0.01)))
plot(1,1,type="n",xlim=c(1998,2013),ylim=c(0,1))
s<-apply(overallFreq,2,function(x)lines(overallFreq[,1],x,col=rgb(0,0,0,0.01)))
rescaleFreq<-apply(overallFreq[,3:ncol(overallFreq)],2,function(x)x-x[1])
s<-apply(overallFreq,2,function(x)lines(overallFreq[,1],x,col=rgb(0,0,0,0.01)))
rescaleFreq<-apply(overallFreq[,3:ncol(overallFreq)],2,function(x)x-x[1])
plot(1,1,type="n",xlim=c(1998,2013),ylim=c(-0.25,0.25))
s<-apply(rescaleFreq,2,function(x)lines(overallFreq[,1],x,col=rgb(0,0,0,0.01)))
dYear<-c()
dAlleles<-c()
for(i in 3:ncol(overallFreq)){
dYear<-c(dYear,overallFreq[,1])
Vec<-overallFreq[,i]
Init<-overallFreq[1,i]
dAlleles<-c(dAlleles,Vec-Init)
}
smoothScatter(dYear,dAlleles,colramp=Pal,nbin=100)
smoothScatter(dYear dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
smoothScatter(dYeardAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
smoothScatter(dYeard Alleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
source("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/simFxn.R")
plot(1,1,type="n",xlim=c(1998,2013),ylim=c(0,1))
s<-apply(overallFreq,2,function(x)lines(overallFreq[,1],x,col=rgb(0,0,0,0.01)))
rescaleFreq<-apply(overallFreq[,3:ncol(overallFreq)],2,function(x)x-x[1])
plot(1,1,type="n",xlim=c(1998,2013),ylim=c(-0.25,0.25))
s<-apply(rescaleFreq,2,function(x)lines(overallFreq[,1],x,col=rgb(0,0,0,0.01)))
dYear<-c()
dAlleles<-c()
for(i in 3:ncol(overallFreq)){
dYear<-c(dYear,overallFreq[,1])
Vec<-overallFreq[,i]
Init<-overallFreq[1,i]
dAlleles<-c(dAlleles,Vec-Init)
}
smoothScatter(dYear,dAlleles,colramp=Pal,nbin=100)
smoothScatter(dYeard Alleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
smoothScatter(dYeard dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
smoothScatter(dYear dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
smoothScatter(dYear,dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
AddFit(nruns=50,n=100,ngens=18,startT=1997,simCol="gray40",rescale=TRUE)
addFit(nruns=50,n=100,ngens=18,startT=1997,simCol="gray40",rescale=TRUE)
addFit(nruns=10,n=1000,ngens=18,h=2,s=0,startT=1997,simCol="gray40",rescale=TRUE)
smoothScatter(dYear,dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=10,n=1000,ngens=18,h=2,s=0,startT=1997,simCol="gray40",rescale=TRUE)
plot(alleleFreqs$d_freq,alleleFreqs$d_imm,xlim=c(-0.15,0.15),xlab="overall freq. change",ylab="freq. change in subset")
points(alleleFreqs$d_freq,alleleFreqs$d_birth,col='blue')
points(alleleFreqs$d_freq,alleleFreqs$d_surv,col='red')
install.packages("ape",repos="https://cloud.r-project.org",quiet=TRUE)
install.packages("phytools")
"library(phytools)"
install.packages("ape")
"library(ape)"
text.string<-
"(((((((cow,pig),whale),(bat,(lemur,human))),(robin,iguana)),coelacanth
),(gold_fish,trout)),shark);"
vert.tree<-read.tree(text=text.string)
setwd("~Desktop/Evoloution/Tasks/Task_07")
setwd("~Desktop/Evoloution/Evolution/Tasks/Task_07")
setwd("~/Desktop/Evoloution/Evolution/Tasks/Task_07")
setwd("~/Desktop/Evolution/Evolution/Tasks/Task_07")
install.packages("phytools")
library("phytools")
install.packages("ape")
library("ape")
text.string<-
"(((((((cow,pig),whale),(bat,(lemur,human))),(robin,iguana)),coelacanth
),(gold_fish,trout)),shark);"
vert.tree<-read.tree(text=text.string)
plot(vert.tree,edge.width=2)
nodelabels(frame="circle",bg='white',cex=1)
vert.tree
str(vert.tree)
tree<-read.tree(text="(((A,B),(C,D)),E);")
plotTree(tree,offset=1)
tiplabels(frame="circle",bg='lightblue',cex=1)
nodelabels(frame="circle",bg='white',cex=1)
tree$tip.label
tree$edge
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length,col='black',border='white',main="",xlab="edge lengths for the Anolis tree",ylim=c(0,50),xlim=c(0,6))
tipEdges<-which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths<-AnolisTree$edge.length
names(Lengths)<-AnolisTree$tip.label
names(Lengths)[which(Lengths==min(Lengths))]
plot(AnolisTree,cex=0.25)
Labs<-sapply(AnolisTree$edge.length)
Labs<-sapply(AnolisTree$edge.length,round,digits=2)
edgelabels(text=Labs,cex=0.25)
?plot.phylo
show.tip.label=FALSE
show.tree$tip.label=FALSE
show.tip.label=FALSE
names(Lengths)<-AnolisTree$tip.label
names(Lengths)[which(Lengths==min(Lengths))]
plot(AnolisTree,cex=0.25)
Labs<-sapply(AnolisTree$edge.length,round,digits=2)
edgelabels(text=Labs,cex=0.25)
ci
plotTree(AnolisTree,offset=1,show.tip.label=FALSE)
Circular_tree(AnolisTree)
circular_tree(AnolisTree)
circular_tree(AnolisTree)
plotTree(AnolisTree,offset=1,show.tip.label=FALSE)
ggtree(AnolisTree,layout="circular")
plotTree(AnolisTree,layout="circular")
plotTree(AnolisTree,layout="circular")+plotTree("(Phylogram)")
plotTree(AnolisTree,layout="circular")+plotTree("(Phylogram)circular")
plotTree(AnolisTree,layout="circular")
circular_tree(AnolisTree)
plot(AnolisTree,type="c")
plot(AnolisTree,type="circular")
plot(AnolisTree,type="c")
plot(AnolisTree,type="c",use.edge.length=FALSE)
plotTree(AnolisTree,offset=1,show.tip.label=FALSE)
plot(AnolisTree,type="c",main="Without branch lengths")
plot(AnolisTree,"c",FALSE,direction"u",srt=-40,xlim=25.5)
plot(AnolisTree,type="c",FALSE,direction"u",srt=-40,xlim=25.5)
plotTree(AnolisTree,type=c)
plotTree(AnolisTree,type="c")
circular_tree(AnolisTree)
plotTree(AnolisTree,offset=1,show.tip.label=FALSE)
AnolisTree<-rtree(50)
circular_tree(AnolisTree)
circular_Tree(AnolisTree)
plotTree(AnolisTree,offset=1,show.tip.label=FALSE)
edgelabels(text=Labs,cex=0.25)
plotTree(AnolisTree,offset=1,show.tip.label=FALSE)
Labs<-sapply(AnolisTree$edge.length,round,digits=2)
edgelabels(text=Labs,cex=0.25)
edgelabels(text=Labs,cex=0.25)
Labs<-sapply(AnolisTree$edge.length,round,digits=2)
edgelabels(text=Labs,cex=0.25)
setwd("~/Desktop/Evolution/Evolution/Tasks/Task_07")
install.packages("phytools")
library("phytools")
install.packages("ape")
library("ape")
text.string<-
"(((((((cow,pig),whale),(bat,(lemur,human))),(robin,iguana)),coelacanth
),(gold_fish,trout)),shark);"
vert.tree<-read.tree(text=text.string)
plot(vert.tree,edge.width=2)
nodelabels(frame="circle",bg='white',cex=1)
str(vert.tree)
tree<-read.tree(text="(((A,B),(C,D)),E);")
plotTree(tree,offset=1)
tiplabels(frame="circle",bg='lightblue',cex=1)
nodelabels(frame="circle",bg='white',cex=1)
tree$tip.label
tree$edge
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length,col='black',border='white',main="",xlab="edge lengths for the Anolis tree",ylim=c(0,50),xlim=c(0,6))
hist(AnolisTree$edge.length,col='black',border='white',main="",xlab="edge lengths for the Anolis tree",ylim=c(0,50),xlim=c(0,6))
tipEdges<-which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths<-AnolisTree$edge.length
names(Lengths)<-AnolisTree$tip.label
names(Lengths)[which(Lengths==min(Lengths))]
plot(AnolisTree,cex=0.25)
Labs<-sapply(AnolisTree$edge.length,round,digits=2)
edgelabels(text=Labs,cex=0.25)
?plot.phylo
plotTree(AnolisTree,alighn.tip.label=TRUE,type="fan")
plotTree(AnolisTree,offset=1,show.tip.label=TRUE,tipcolor="red")
plotTree(AnolisTree,offset=1,show.tip.label=TRUE,tip.color="red")
plotTree(AnolisTree,offset=1,show.tip.label=TRUE,tip.color="red",plot=TRUE)
edgelabels(text=Labs,cex=0.25)z
AnnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
n<-length(AnolisTree$tip.label)
ee<-setNames(AnolisTree$edge.length[sapply(1:n,function(x,y)which(y==x),y=AnolisTree$edge[,2])],AnolisTree$tip.label)
AnolisTree<-pbtree(n=10)
AnnolisTree$edge.length<-round(AnolisTree$edge.length,0.5)
n<-length(AnolisTree$tip.label)
ee<-setNames(AnolisTree$edge.length[sapply(1:n,function(x,y)which(y==x), y=AnolisTree$edge[,2])], AnolisTree$tip.label)
ee
plot (AnolisTree, cex=1)
edgelabels(AnolisTree$edge.length)
anolis.pruned <- collapseTree(AnolisTree)
plotTree(anolis.pruned, type="fan", fsize=0.7, lwd=1, ftype="i")
plotTree(anolis.pruned, type="fan", fsize=0.7, lwd=1, ftype="i")
plotTree(anolis.pruned, type="fan", fsize=0.7, lwd=1, ftype="i")
ltt(AnolisTree)
abline(0,1,lwd=2,col='red',lty=2)
abline(0,1,lwd=2,col='red',lty=2)
fit.bd()
